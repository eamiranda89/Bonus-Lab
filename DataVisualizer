import java.util.Scanner;
import java.util.ArrayList;

public class DataVisualizer {
   public static void main(String[] args) {
      
      //(1) Prompt the user for a title for data. Output the title. (1 pt) 
      
      Scanner keyboard = new Scanner(System.in);
      
      System.out.println("Enter a title for the data:");
      String titleName = keyboard.nextLine();
      System.out.println("You entered: " + titleName);
      System.out.println();
      
      //(2) Prompt the user for the headers of two columns of a table. 
      //Output the column headers. (1 pt) 
      
      System.out.println("Enter the column 1 header:");
      String columnOne = keyboard.nextLine();
      System.out.println("You entered: " + columnOne);
      System.out.println();
  
      System.out.println("Enter the column 2 header:");
      String columnTwo = keyboard.nextLine();
      System.out.println("You entered: " + columnTwo);
      System.out.println();
      
      
      //(3) Prompt the user for data points. Data points must be in this format: 
      //string, int. Store the information before the comma into a string 
      //variable and the information after the comma into an integer. The user 
      //will enter -1 when they have finished entering data points. Output the 
      //data points. Store the string components of the data points in an ArrayList 
      //of strings. Store the integer components of the data points in a second 
      //ArrayList of integers. (4 pts) 
      
      ArrayList<String> dataString = new ArrayList<String>();
      ArrayList<Integer> dataPoint = new ArrayList<Integer>();
   
      //The user will enter -1 when they have finished entering data points.
      
      while(true){
      System.out.println("Enter a data point (-1 to stop input):");
      String line = keyboard.nextLine();
      
      if(line.equals("-1")){
      
      break;
      
      //(4) Perform error checking for the data point entries. 
      //If any of the following errors occurs, output the 
      //appropriate error message and prompt again for a valid data point.
      
      }else{
      String string [] = line.split(",");
      
      //If entry has no comma
      
      if(string.length == 1){
      System.out.println("Error: No comma in string.");
      System.out.println();
      continue;
      
      //If entry has more than one comma
      
      }else if(string.length > 2){
      System.out.println("Error: Too many commas in input.");
      System.out.println();
      continue;
      
      }else {
         try{
         int point = Integer.parseInt(string[1].trim());
         dataPoint.add(point);
         dataString.add(string[0]);
         
      System.out.println("Data string: " + string[0]);
      System.out.println("Data integer: "+ point);
      System.out.println();
      continue;
      
      //If entry after the comma is not an integer
      
      }catch(NumberFormatException e){
      System.out.println("Error: Comma not followed by an integer.");
      System.out.println();
      continue;
            }
      }
   }
}

      //(5) Output the information in a formatted table. 
      //The title is right justified with a minimum of 33 characters. 
      //Column 1 is left justified with a minimum of 20 characters. 
      //Column 2 is right justified with a minimum of 23 characters. (3 pts) 
      
      System.out.println();  
      System.out.printf("%33s\n",titleName);
      System.out.printf("%-20s|%23s\n",columnOne,columnTwo);
      System.out.println("--------------------------------------------");

      for(int i=0; i<dataString.size(); i++){
      System.out.printf("%-20s|%23d\n",dataString.get(i),dataPoint.get(i));
       }
      
      //(6) Output the information as a formatted histogram. 
      //Each name is right justified with a minimum of 20 characters. (4 pts)  
      
      System.out.println();
      for(int i=0; i<dataString.size();i++){
      System.out.printf("%21s",dataString.get(i) + " ");
      
      for(int j=0; j<dataPoint.get(i);j++){
      System.out.print("*");
      }
      System.out.println();
      }
   }

}
